/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Clases.*;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 * @author Diego Hiriart
 * @author Luis Corales
 * @author Martin Galvez
 * @author Daniel Alban
 * @author Daniela Estupinan
 */
public class CambioHabitacion extends javax.swing.JInternalFrame {

    Admin recepcion = new Admin();
    File[] listOfFiles;
    
    /**
     * Creates new form CambioHabitacion
     */
    public CambioHabitacion(Admin recepcionP) {
        initComponents();
        //Metodo para leer reservas activas y poner en el combo box   
        this.recepcion = recepcionP;
        try{
            leerActivas();
        }catch(IOException e){
            //
        }   
        this.reservasComboBox.setSelectedIndex(0);
    }
    
    public void leerActivas() throws IOException{
        try{
            File folder = new File("PorteroAdminHotel\\Activas\\");//C:\\PorteroAdminHotel\\Activas\\
            this.listOfFiles = folder.listFiles();
            for (int i = 0; i < listOfFiles.length; i++) {
                if (listOfFiles[i].isFile()) {
                    String[] fin = listOfFiles[i].getName().split("[.]");
                    String[] archivos = fin[0].split("_");
                    String nombre = Files.readAllLines(Paths.get(listOfFiles[i].toString())).get(5);
                    this.reservasComboBox.addItem("Huesped: "+nombre+"  Inicio: "+archivos[1]+"  Fin: "+archivos[2]);             
                }
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error de lectura de archivo\n no existe la carpeta PorteroAdminHotel\\Finalizadas\\");
        }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        reservasComboBox = new javax.swing.JComboBox<>();
        registarButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        actualField = new javax.swing.JTextField();
        habitacionCombo = new javax.swing.JComboBox<>();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setTitle("Cambio de Habitación");

        jLabel1.setText("Escoja reserva a editar:");

        reservasComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));
        reservasComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservasComboBoxActionPerformed(evt);
            }
        });

        registarButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        registarButton.setText("Registrar cambio de habitación");
        registarButton.setEnabled(false);
        registarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registarButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Nueva habitación:");

        jLabel3.setText("Habitación actual:");

        actualField.setEditable(false);

        habitacionCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));
        habitacionCombo.setEnabled(false);
        habitacionCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                habitacionComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(habitacionCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, 131, Short.MAX_VALUE)
                            .addComponent(actualField)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(registarButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(reservasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(reservasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addComponent(jLabel3))
                    .addComponent(actualField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(habitacionCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addComponent(registarButton)
                .addGap(86, 86, 86))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registarButtonActionPerformed
        // TODO add your handling code here:
        File archivo = new File(listOfFiles[this.reservasComboBox.getSelectedIndex()-1].toString());
        List <String> lineas=null;
        try {       
            lineas=Files.readAllLines(Paths.get(archivo.toString()));
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error de lectura de archivo");
        }
        
        lineas.set(3, this.habitacionCombo.getSelectedItem().toString());
        try {
            Files.write(archivo.toPath(), lineas);
        } catch (IOException ex) {
            //
        }
        String inicio="";
        try {
            inicio = Files.readAllLines(Paths.get(archivo.toString())).get(0);
        } catch (IOException ex) {
            //
        }   
        String fin="";
        try {
            fin = Files.readAllLines(Paths.get(archivo.toString())).get(1);
        } catch (IOException ex) {
            //
        }
        try{
            archivo.renameTo(new File("PorteroAdminHotel\\Activas\\"+this.habitacionCombo.getSelectedItem().toString()+"_"+inicio+"_"+fin+".txt"));//C:\\PorteroAdminHotel\\Activas\\
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error de lectura de archivo\n no existe la carpeta PorteroAdminHotel\\Finalizadas\\");
        }
        
        
        this.reservasComboBox.removeAllItems();
        this.reservasComboBox.addItem("-");
        try{
            leerActivas();
        }catch(IOException e){
            //
        }   
        
        this.actualField.setText("");
        this.reservasComboBox.setSelectedIndex(0);
        this.habitacionCombo.removeAllItems();
        this.habitacionCombo.addItem("-");
        this.habitacionCombo.setSelectedIndex(0);
        this.habitacionCombo.setSelectedIndex(0);
        this.habitacionCombo.setEnabled(false);
        this.registarButton.setEnabled(false);
        
        JOptionPane.showMessageDialog(this, "Cambio de habitación exitoso");
    }//GEN-LAST:event_registarButtonActionPerformed

    private void reservasComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservasComboBoxActionPerformed
        // TODO add your handling code here:
        //Leer habitacion actual y poner el field      
        if (reservasComboBox.getSelectedIndex()>0){  
            String reserva = listOfFiles[this.reservasComboBox.getSelectedIndex()-1].toString(), habitacionOriginal="";
            String nombreAr = listOfFiles[this.reservasComboBox.getSelectedIndex()-1].getName();
            try {
                habitacionOriginal = Files.readAllLines(Paths.get(reserva)).get(3);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error de lectura de archivo");
            }
            Fecha inicio = new Fecha(), fin = new Fecha();
            String[] datos = nombreAr.split("[.]");
            String[] fechas = datos[0].split("_");
            String[] ini = fechas[1].split("-"), fi = fechas[2].split("-");
            try{
                inicio=new Fecha(Integer.parseInt(ini[0]), Integer.parseInt(ini[1]), Integer.parseInt(ini[2]));                
            }catch(Exception e){
                //
            }
            try{
                fin=new Fecha(Integer.parseInt(fi[0]), Integer.parseInt(fi[1]), Integer.parseInt(fi[2]));                
            }catch(Exception e){
                //
            }
            //Metodo de clase admin que evalua las habitaciones disponibles para la fecha
            List<String> disponibles = recepcion.habDisponiblesRe(inicio, fin);
            List<String> quitar = recepcion.habMantenimiento(inicio, fin);
            for(String quita : quitar){
                disponibles.remove(quita);
            }
            for(String disponible : disponibles){
                this.habitacionCombo.addItem(disponible);
            }
            this.actualField.setText(habitacionOriginal);
            this.habitacionCombo.setEnabled(true);
            this.registarButton.setEnabled(true);
        }      
    }//GEN-LAST:event_reservasComboBoxActionPerformed

    private void habitacionComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_habitacionComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_habitacionComboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CambioHabitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CambioHabitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CambioHabitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CambioHabitacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Admin recepcionP = new Admin();
                new CambioHabitacion(recepcionP).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField actualField;
    private javax.swing.JComboBox<String> habitacionCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton registarButton;
    private javax.swing.JComboBox<String> reservasComboBox;
    // End of variables declaration//GEN-END:variables
}
