/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Clases.*;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;
import javax.swing.JOptionPane;

/**
 * @author Diego Hiriart
 * @author Luis Corales
 * @author Martin Galvez
 * @author Daniel Alban
 * @author Daniela Estupinan
 */
public class Servicios extends javax.swing.JInternalFrame {

    Admin recepcion = new Admin();
    
    /**
     * Creates new form Servicios
     */
    public Servicios(Admin recepcionP) {
        initComponents();
        this.recepcion = recepcionP;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        servicioVerComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        disponibilidadField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        servicioEditarComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        editarEstadoComboBox = new javax.swing.JComboBox<>();
        resgistarButton = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setTitle("Ver o editar disponibilidad de servicios");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Ver disponibilidad");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Editar disponibilidad");

        jLabel3.setText("Servicio:");

        servicioVerComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Internet", "Televisión por cable", "Restaurant", "Servicio a la habitación", "Visita a las ballenas", "Visita a la playa escondida" }));
        servicioVerComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicioVerComboBoxActionPerformed(evt);
            }
        });

        jLabel4.setText("Estado actual:");

        disponibilidadField.setEditable(false);

        jLabel5.setText("Servicio:");

        servicioEditarComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Internet", "Televisión por cable", "Restaurant", "Servicio a la habitación", "Visita a las ballenas", "Visita a la playa escondida" }));
        servicioEditarComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicioEditarComboBoxActionPerformed(evt);
            }
        });

        jLabel6.setText("Nuevo estado (se muestra actual):");

        editarEstadoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Disponible", "No disponible" }));

        resgistarButton.setText("Registrar");
        resgistarButton.setEnabled(false);
        resgistarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resgistarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(servicioVerComboBox, 0, 229, Short.MAX_VALUE)
                            .addComponent(disponibilidadField)
                            .addComponent(servicioEditarComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editarEstadoComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addComponent(resgistarButton)))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel3))
                    .addComponent(servicioVerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(disponibilidadField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addComponent(jLabel2)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(servicioEditarComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(editarEstadoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(resgistarButton)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void servicioVerComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicioVerComboBoxActionPerformed
        // TODO add your handling code here:
        try{
            String archivo = "PorteroAdminHotel\\Servicios.txt";//C:\\PorteroAdminHotel\\Servicios.txt
            String estado = "";
            if(this.servicioVerComboBox.getSelectedIndex()>0){
                String servicio = this.servicioVerComboBox.getSelectedItem().toString();
                switch(servicio){
                    case("Internet"):
                        try {
                            estado = Files.readAllLines(Paths.get(archivo)).get(0);
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(this, "Error de lectura de archivo");
                        }
                    break;
                    case("Televisión por cable"):
                        try {
                            estado = Files.readAllLines(Paths.get(archivo)).get(1);
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(this, "Error de lectura de archivo");
                        }
                    break;
                    case("Restaurant"):
                        try {
                            estado = Files.readAllLines(Paths.get(archivo)).get(2);
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(this, "Error de lectura de archivo");
                        }
                    break;
                    case("Servicio a la habitación"):
                        try {
                            estado = Files.readAllLines(Paths.get(archivo)).get(3);
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(this, "Error de lectura de archivo");
                        }
                    break;
                    case("Visita a las ballenas"):
                        try {
                            estado = Files.readAllLines(Paths.get(archivo)).get(4);
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(this, "Error de lectura de archivo");
                        }
                    break;
                    case("Visita a la playa escondida"):
                        try {
                            estado = Files.readAllLines(Paths.get(archivo)).get(5);
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(this, "Error de lectura de archivo");
                        }
                    break;
                }
                boolean disponible = Boolean.parseBoolean(estado);
                if(disponible){
                    this.disponibilidadField.setText("Disponible");
                }else {
                    this.disponibilidadField.setText("No disponible");    
                }          
            }else if(this.servicioVerComboBox.getSelectedIndex()==0){
                this.disponibilidadField.setText("");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error de lectura de archivo\n no existe la carpeta PorteroAdminHotel\\Finalizadas\\");
        }       
    }//GEN-LAST:event_servicioVerComboBoxActionPerformed

    private void servicioEditarComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicioEditarComboBoxActionPerformed
        // TODO add your handling code here:
        try{
            String archivo = "PorteroAdminHotel\\Servicios.txt";//C:\\PorteroAdminHotel\\Servicios.txt
            String estado = "";
            if(this.servicioEditarComboBox.getSelectedIndex()>0){
                String servicio = this.servicioEditarComboBox.getSelectedItem().toString();
                switch(servicio){
                    case("Internet"):
                        try {
                            estado = Files.readAllLines(Paths.get(archivo)).get(0);
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(this, "Error de lectura de archivo");
                        }
                    break;
                    case("Televisión por cable"):
                        try {
                            estado = Files.readAllLines(Paths.get(archivo)).get(1);
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(this, "Error de lectura de archivo");
                        }
                    break;
                    case("Restaurant"):
                        try {
                            estado = Files.readAllLines(Paths.get(archivo)).get(2);
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(this, "Error de lectura de archivo");
                        }
                    break;
                    case("Servicio a la habitación"):
                        try {
                            estado = Files.readAllLines(Paths.get(archivo)).get(3);
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(this, "Error de lectura de archivo");
                        }
                    break;
                    case("Visita a las ballenas"):
                        try {
                            estado = Files.readAllLines(Paths.get(archivo)).get(4);
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(this, "Error de lectura de archivo");
                        }
                    break;
                    case("Visita a la playa escondida"):
                        try {
                            estado = Files.readAllLines(Paths.get(archivo)).get(5);
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(this, "Error de lectura de archivo");
                        }
                    break;
                }
                boolean disponible = Boolean.parseBoolean(estado);
                if(disponible){
                    this.editarEstadoComboBox.setSelectedIndex(1);
                }else{
                    this.editarEstadoComboBox.setSelectedIndex(2);
                }          
            }else if(this.servicioEditarComboBox.getSelectedIndex()==0){
                this.editarEstadoComboBox.setSelectedIndex(0);
            }
            this.resgistarButton.setEnabled(true);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error de lectura de archivo\n no existe la carpeta PorteroAdminHotel\\Finalizadas\\");
        }      
   
    }//GEN-LAST:event_servicioEditarComboBoxActionPerformed

    private void resgistarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resgistarButtonActionPerformed
        // TODO add your handling code here:
        if(this.servicioEditarComboBox.getSelectedIndex()>0 && this.editarEstadoComboBox.getSelectedIndex()>0){
            try{
                String archivo = "PorteroAdminHotel\\Servicios.txt", estado="";//C:\\PorteroAdminHotel\\Servicios.txt
                File servicios = new File("PorteroAdminHotel\\Servicios.txt".toString());//C:\\PorteroAdminHotel\\Servicios.txt
                List <String> lineas=null;
                try {       
                    lineas=Files.readAllLines(Paths.get(servicios.toString()));
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, "Error de lectura de archivo");
                }
                if(this.editarEstadoComboBox.getSelectedIndex()==1){
                    estado="true";
                }else if(this.editarEstadoComboBox.getSelectedIndex()==2){
                    estado="false";
                }  
                if(this.servicioEditarComboBox.getSelectedIndex()>0){
                    String servicio = this.servicioEditarComboBox.getSelectedItem().toString();
                    switch(servicio){
                        case("Internet"):
                            lineas.set(0, estado);
                        break;
                        case("Televisión por cable"):
                            lineas.set(1, estado);
                        break;
                        case("Restaurant"):
                            lineas.set(2, estado);
                        break;
                        case("Servicio a la habitación"):
                            lineas.set(3, estado);
                        break;
                        case("Visita a las ballenas"):
                            lineas.set(4, estado);
                        break;
                        case("Visita a la playa escondida"):
                            lineas.set(5, estado); 
                        break;
                    }
                }
                try {
                    Files.write(servicios.toPath(), lineas);
                } catch (IOException ex) {
                    //
                }
                //Resetea los combos de edicion y el estado de los servicios
                this.servicioVerComboBoxActionPerformed(evt);
                this.servicioEditarComboBox.setSelectedIndex(0);
                this.editarEstadoComboBox.setSelectedIndex(0);
                this.resgistarButton.setEnabled(false);
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "Error de lectura de archivo\n no existe la carpeta PorteroAdminHotel\\Finalizadas\\");
            }
            
        }
    
    }//GEN-LAST:event_resgistarButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Servicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Servicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Servicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Servicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Admin recepcionP = new Admin();
                new Servicios(recepcionP).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField disponibilidadField;
    private javax.swing.JComboBox<String> editarEstadoComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton resgistarButton;
    private javax.swing.JComboBox<String> servicioEditarComboBox;
    private javax.swing.JComboBox<String> servicioVerComboBox;
    // End of variables declaration//GEN-END:variables
}
