/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Clases.*;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.time.LocalDate;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 * @author Diego Hiriart
 * @author Luis Corales
 * @author Martin Galvez
 * @author Daniel Alban
 * @author Daniela Estupinan
 */
public class EdicionFechas extends javax.swing.JInternalFrame {

    Admin recepcion = new Admin();
    int diaInicioOriginal, mesInicioOriginal, anioInicioOriginal;
    File[] listOfFiles;
    
    /**
     * Creates new form EdicionFechas
     */
    public EdicionFechas(Admin recepcionP) {
        initComponents();
        //Metodo para leer reservas activas y poner en el combo box
        this.recepcion = recepcionP;
        this.reservasComboBox.addItem("-");
        try{
            leerActivas();
        }catch(IOException e){
            //
        }   
        this.reservasComboBox.setSelectedIndex(0);
    }
    
    public void leerActivas() throws IOException{
        try{
            File folder = new File("PorteroAdminHotel\\Activas\\");//C:\\PorteroAdminHotel\\Activas\\
            this.listOfFiles = folder.listFiles();
            for (int i = 0; i < listOfFiles.length; i++) {
                if (listOfFiles[i].isFile()) {
                    String[] fin = listOfFiles[i].getName().split("[.]");
                    String[] archivos = fin[0].split("_");
                    String nombre = Files.readAllLines(Paths.get(listOfFiles[i].toString())).get(5);
                    this.reservasComboBox.addItem("Huesped: "+nombre+"  Inicio: "+archivos[1]+"  Fin: "+archivos[2]);             
                }
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error de lectura de archivo\n no existe la carpeta PorteroAdminHotel\\Finalizadas\\");
        }
    }
    
    public void leerFechas(String reserva) throws IOException{
        String lineaEspecifica = Files.readAllLines(Paths.get(reserva)).get(0);
        String[] inicio = lineaEspecifica.split("-");
        lineaEspecifica = Files.readAllLines(Paths.get(reserva)).get(1);
        String[] fin = lineaEspecifica.split("-");
        
        this.diaInicioField.setText(inicio[0]);
        this.mesInicioCombo.setSelectedIndex(Integer.parseInt(inicio[1]));
        this.anioInicioField.setText(inicio[2]);
        this.diaInicioOriginal=Integer.parseInt(inicio[0]);
        this.mesInicioOriginal=Integer.parseInt(inicio[1]);
        this.anioInicioOriginal=Integer.parseInt(inicio[2]);
        
        this.diaFinField.setText(fin[0]);
        this.mesFinCombo.setSelectedIndex(Integer.parseInt(fin[1]));
        this.anioFinField.setText(fin[2]);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        reservasComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        diaInicioField = new javax.swing.JTextField();
        mesInicioCombo = new javax.swing.JComboBox<>();
        anioInicioField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        diaFinField = new javax.swing.JTextField();
        mesFinCombo = new javax.swing.JComboBox<>();
        anioFinField = new javax.swing.JTextField();
        registrarButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Edicion de Fechas");

        jLabel1.setText("Escoja reserva a editar:");

        reservasComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservasComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Fecha inicio");

        diaInicioField.setEnabled(false);

        mesInicioCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembe", "Diciembre" }));
        mesInicioCombo.setEnabled(false);

        anioInicioField.setEnabled(false);

        jLabel3.setText("Fecha fin");

        diaFinField.setEnabled(false);

        mesFinCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembe", "Diciembre" }));
        mesFinCombo.setEnabled(false);

        anioFinField.setEnabled(false);

        registrarButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        registrarButton.setText("Registrar cambios");
        registrarButton.setEnabled(false);
        registrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarButtonActionPerformed(evt);
            }
        });

        jLabel12.setText("Dia");

        jLabel7.setText("Mes");

        jLabel14.setText("Año");

        jLabel13.setText("Dia");

        jLabel8.setText("Mes");

        jLabel15.setText("Año");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Esta es la fecha actual, cambiela según requiera:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(registrarButton)
                                .addGap(66, 66, 66))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(diaFinField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(diaInicioField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(mesInicioCombo, 0, 106, Short.MAX_VALUE)
                                    .addComponent(mesFinCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(33, 33, 33)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(anioFinField, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(anioInicioField, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(reservasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(reservasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(jLabel4)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(mesInicioCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(diaInicioField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anioInicioField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(diaFinField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mesFinCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anioFinField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel8)
                    .addComponent(jLabel15))
                .addGap(71, 71, 71)
                .addComponent(registrarButton)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarButtonActionPerformed
        // TODO add your handling code here:   
        String error = "";
        LocalDate actual = LocalDate.now();//Da fecha actual 
               
        if(this.reservasComboBox.getSelectedIndex()>0){
            try{
                if(Integer.parseInt(this.anioFinField.getText())<=this.anioInicioOriginal || Integer.parseInt(this.anioFinField.getText())<=actual.getYear()){
                    if((this.mesFinCombo.getSelectedIndex())<=this.mesInicioOriginal || (this.mesFinCombo.getSelectedIndex())<=actual.getMonthValue()){
                        if(Integer.parseInt(this.diaFinField.getText())<=this.diaInicioOriginal && (this.mesFinCombo.getSelectedIndex())<=this.mesInicioOriginal 
                                || Integer.parseInt(this.diaFinField.getText())<=actual.getDayOfMonth() && (this.mesFinCombo.getSelectedIndex())<=actual.getMonthValue()){
                            error+="Ha ingresado una fecha de fin anterior o igual \na la fecha de inicio de la reserva, ingrese de nuevo\n";
                        }
                    }
                }
                if((Integer.parseInt(this.anioFinField.getText())%4==0) && (Integer.parseInt(this.anioFinField.getText())%100!=0 || Integer.parseInt(this.anioFinField.getText())%400==0)){
                    int mes=this.mesFinCombo.getSelectedIndex();
                    if(mes==2){
                        if(Integer.parseInt(this.diaFinField.getText())>29){
                            error+="El mes de Febrero en ese año tiene solo 29 días\n";
                        }
                    }else if(mes==1 || mes==3 || mes==5 || mes==7 || mes==8 || mes==10 || mes==12){
                        if(Integer.parseInt(this.diaFinField.getText())>31){
                            error+="El mes de "+this.mesFinCombo.getSelectedItem().toString()+" solo tiene 31 días\n";
                        }
                    }else{
                        if(Integer.parseInt(this.diaFinField.getText())>30){
                            error+="El mes de "+this.mesFinCombo.getSelectedItem().toString()+" solo tiene 30 días\n";
                        }
                    }
                }else{
                    int mes=this.mesFinCombo.getSelectedIndex();
                    if(mes==2){
                        if(Integer.parseInt(this.diaFinField.getText())>28){
                            error+="El mes de Febrero en ese año tiene solo 28 días\n";
                        }
                    }else if(mes==1 || mes==3 || mes==5 || mes==7 || mes==8 || mes==10 || mes==12){
                        if(Integer.parseInt(this.diaFinField.getText())>31){
                            error+="El mes de "+this.mesFinCombo.getSelectedItem().toString()+" solo tiene 31 días\n";
                        }
                    }else{
                        if(Integer.parseInt(this.diaFinField.getText())>30){
                            error+="El mes de "+this.mesFinCombo.getSelectedItem().toString()+" solo tiene 30 días\n";
                        }
                    }
                }
                if(this.mesFinCombo.getSelectedIndex()==0){
                    error+="Seleccione un mes de fin\n";
                }
            }catch(Exception e){
                error+="Ha dejado un campo de fecha de fin vacio\n";
            }
            

            try{
                if(Integer.parseInt(this.anioInicioField.getText())>=Integer.parseInt(this.anioFinField.getText())){
                    if((this.mesInicioCombo.getSelectedIndex())>=(this.mesFinCombo.getSelectedIndex())){
                        if(Integer.parseInt(this.diaInicioField.getText())<actual.getDayOfMonth() && (this.mesInicioCombo.getSelectedIndex())<actual.getMonthValue() 
                                || Integer.parseInt(this.diaInicioField.getText())>=Integer.parseInt(this.diaFinField.getText())){
                            error="Ha ingresado un fecha de inicio posterior a la deseada de finalizacion, ingrese de nuevo\n";
                        }
                    }
                }            
                if((Integer.parseInt(this.anioInicioField.getText())%4==0) && (Integer.parseInt(this.anioInicioField.getText())%100!=0 || Integer.parseInt(this.anioInicioField.getText())%400==0)){
                    int mes=this.mesInicioCombo.getSelectedIndex();
                    if(mes==2){
                        if(Integer.parseInt(this.diaInicioField.getText())>29){
                            error+="El mes de Febrero en ese año tiene solo 29 días\n";
                        }
                    }else if(mes==1 || mes==3 || mes==5 || mes==7 || mes==8 || mes==10 || mes==12){
                        if(Integer.parseInt(this.diaInicioField.getText())>31){
                            error+="El mes de "+this.mesInicioCombo.getSelectedItem().toString()+" solo tiene 31 días\n";
                        }
                    }else{
                        if(Integer.parseInt(this.diaInicioField.getText())>30){
                            error+="El mes de "+this.mesInicioCombo.getSelectedItem().toString()+" solo tiene 30 días\n";
                        }
                    }
                }else{
                    int mes=this.mesInicioCombo.getSelectedIndex();
                    if(mes==2){
                        if(Integer.parseInt(this.diaInicioField.getText())>28){
                            error+="El mes de Febrero en ese año tiene solo 28 días\n";
                        }
                    }else if(mes==1 || mes==3 || mes==5 || mes==7 || mes==8 || mes==10 || mes==12){
                        if(Integer.parseInt(this.diaInicioField.getText())>31){
                            error+="El mes de "+this.mesInicioCombo.getSelectedItem().toString()+" solo tiene 31 días\n";
                        }
                    }else{
                        if(Integer.parseInt(this.diaInicioField.getText())>30){
                            error+="El mes de "+this.mesInicioCombo.getSelectedItem().toString()+" solo tiene 30 días\n";
                        }
                    }
                }
                if(this.mesInicioCombo.getSelectedIndex()==0){
                    error+="Seleccione un mes de inicio\n";
                }
            }catch(Exception e){
                error+="Ha dejado un campo de fecha de inicio vacio\n";
            }  
            Fecha ini = new Fecha(), fi = new Fecha();
            try{
                ini=new Fecha(Integer.parseInt(this.diaInicioField.getText()), this.mesInicioCombo.getSelectedIndex(), Integer.parseInt(this.anioInicioField.getText()));
                Integer.parseInt(this.diaInicioField.getText()); Integer.parseInt(this.anioInicioField.getText());
            }catch(Exception e){
                error=error+"Fecha de inicio\n";
            }
            try{
                fi=new Fecha(Integer.parseInt(this.diaFinField.getText()), this.mesFinCombo.getSelectedIndex(), Integer.parseInt(this.anioFinField.getText()));
                Integer.parseInt(this.diaInicioField.getText()); Integer.parseInt(this.anioInicioField.getText());
            }catch(Exception e){
                error=error+"Fecha de Fin\n";
            }
            String hab="";
            try {
                hab = Files.readAllLines(listOfFiles[this.reservasComboBox.getSelectedIndex()-1].toPath()).get(3);
            } catch (IOException ex) {
                //;
            }
            if(!hab.equalsIgnoreCase("")){
                List<String> disponibles = recepcion.habDisponiblesRe(ini, fi, listOfFiles[this.reservasComboBox.getSelectedIndex()-1]);
                List<String> quitar = recepcion.habMantenimiento(ini, fi);
                for(String quita : quitar){
                    disponibles.remove(quita);
                }
                if(!disponibles.contains(hab)){
                    error+="La habitación de la reserva que está editando se encontrará ocupada en ese rango de fechas";
                }
            }      
                           
            
            if(error.equalsIgnoreCase("")){   
                //Cambiar Datos
                File anterior = new File(listOfFiles[this.reservasComboBox.getSelectedIndex()-1].toString());
                List <String> lineas=null;
                try {
                    lineas = Files.readAllLines(Paths.get(anterior.toString()));
                } catch (IOException ex) {
                    //
                }
                lineas.set(0, this.diaInicioField.getText()+"-"+(this.mesInicioCombo.getSelectedIndex())+"-"+this.anioInicioField.getText());
                try {
                    Files.write(anterior.toPath(), lineas);
                } catch (IOException ex) {
                    //
                }
                lineas.set(1, this.diaFinField.getText()+"-"+(this.mesFinCombo.getSelectedIndex())+"-"+this.anioFinField.getText());
                try {
                    Files.write(anterior.toPath(), lineas);
                } catch (IOException ex) {
                    //
                }
                lineas.set(2, String.valueOf(recepcion.diasEstadia(new Fecha(Integer.parseInt(this.diaFinField.getText()), (this.mesFinCombo.getSelectedIndex()), Integer.parseInt(this.anioFinField.getText())), 
                        new Fecha(Integer.parseInt(this.diaInicioField.getText()), (this.mesInicioCombo.getSelectedIndex()), Integer.parseInt(this.anioInicioField.getText())) ) ) );
                try {
                    Files.write(anterior.toPath(), lineas);
                } catch (IOException ex) {
                    //
                }

                //Cambiar nombre de archivo
                String habitacion="";
                try {
                    habitacion = Files.readAllLines(Paths.get(anterior.toString())).get(3);
                } catch (IOException ex) {
                    //
                }
                String inicio="";
                try {
                    inicio = Files.readAllLines(Paths.get(anterior.toString())).get(0);
                } catch (IOException ex) {
                    //
                }   
                String fin="";
                try {
                    fin = Files.readAllLines(Paths.get(anterior.toString())).get(1);
                } catch (IOException ex) {
                    //
                }
                try{
                    anterior.renameTo(new File("PorteroAdminHotel\\Activas\\"+habitacion+"_"+inicio+"_"+fin+".txt"));//C:\\PorteroAdminHotel\\Activas\\
                }catch(Exception e){
                    JOptionPane.showMessageDialog(this, "Error de lectura de archivo\n no existe la carpeta PorteroAdminHotel\\Finalizadas\\");
                }

               
                
                this.diaInicioField.setText("");
                this.mesInicioCombo.setSelectedIndex(-1);
                this.anioInicioField.setText("");
                this.diaFinField.setText("");
                this.mesFinCombo.setSelectedIndex(-1);
                this.anioFinField.setText(""); 
                this.reservasComboBox.removeAllItems();
                this.reservasComboBox.addItem("-");
                this.diaInicioField.setEnabled(false);
                this.mesInicioCombo.setEnabled(false);
                this.anioInicioField.setEnabled(false);
                this.diaFinField.setEnabled(false);
                this.mesFinCombo.setEnabled(false);
                this.anioFinField.setEnabled(false);
                this.registrarButton.setEnabled(false);
                
                try {
                    leerActivas();
                } catch (IOException ex) {
                    //
                }
                
                this.reservasComboBox.setSelectedIndex(0);
                        
                JOptionPane.showMessageDialog(this, "Edicion exitosa");
                
            }else{
                JOptionPane.showMessageDialog(this, error);
            }
                      
            
        }else{
            JOptionPane.showMessageDialog(this, "No ha seleccionado una reserva");
        }
        
        
        

    }//GEN-LAST:event_registrarButtonActionPerformed

    private void reservasComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservasComboBoxActionPerformed
        // TODO add your handling code here:
        String reserva="";
        if(this.reservasComboBox.getSelectedIndex()>0){
            reserva = listOfFiles[this.reservasComboBox.getSelectedIndex()-1].toString();
            this.diaInicioField.setEnabled(true);
            this.mesInicioCombo.setEnabled(true);
            this.anioInicioField.setEnabled(true);
            this.diaFinField.setEnabled(true);
            this.mesFinCombo.setEnabled(true);
            this.anioFinField.setEnabled(true);
            this.registrarButton.setEnabled(true);
            if(!reserva.equalsIgnoreCase("-")){
                try{
                    leerFechas(reserva);
                }catch(IOException e){
                    System.out.println("fechas");
                }
            }
        }  
        
        
    }//GEN-LAST:event_reservasComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EdicionFechas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EdicionFechas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EdicionFechas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EdicionFechas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Admin recepcionP = new Admin();
                new EdicionFechas(recepcionP).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField anioFinField;
    private javax.swing.JTextField anioInicioField;
    private javax.swing.JTextField diaFinField;
    private javax.swing.JTextField diaInicioField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JComboBox<String> mesFinCombo;
    private javax.swing.JComboBox<String> mesInicioCombo;
    private javax.swing.JButton registrarButton;
    private javax.swing.JComboBox<String> reservasComboBox;
    // End of variables declaration//GEN-END:variables
}
